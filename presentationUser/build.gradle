apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId "com.jiechic.android.architecture.user"
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def file = output.outputFile

                String parent = file.parent
                if (project.hasProperty('OUTPUT_DIR') && new File((String) OUTPUT_DIR).exists())
                    parent = OUTPUT_DIR

                output.outputFile = new File(
                        parent,
                        (String) file.name.replace(
                                ".apk",
                                // alter this string to change output file name
                                "-" + defaultConfig.versionName + "-build" + defaultConfig.versionCode + ".apk"
                        )
                )
            }
        }
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    compile project(':domain')
    compile project(':data')
    compile project(':library')

    compile presentationDependencies.appcompat
    compile presentationDependencies.recyclerView
    compile presentationDependencies.cardview
    compile presentationDependencies.design
    compile presentationDependencies.gridlayout
    compile presentationDependencies.supportAnnotations
    //mvp
    compile presentationDependencies.nucleus
    compile presentationDependencies.nucleusV4
    compile presentationDependencies.nucleusV7

    //自动保存数据icepick
    compile presentationDependencies.icepick
    provided presentationDependencies.icepickProcessor

    //glide
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.github.bumptech.glide:okhttp-integration:1.3.1'
    //dagger
    apt presentationDependencies.daggerCompiler
    provided presentationDependencies.javaxAnnotation
    compile presentationDependencies.dagger
    //rxAndroid with rxjava
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    //butterknife
    compile presentationDependencies.butterKnife


    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.testingSupportLib
}
